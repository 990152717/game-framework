<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE build>
<project default="upload-server" name="Niuniu-213" basedir="../../.">
	<description>
		niuniu自动编译打包脚本
	</description>
	<echo>Building niuniu...</echo>
	<echo>basedir: ${basedir}</echo>

	<!--发布变量设置-->
	<property name="host" value="192.168.1.213" />
	<property name="user" value="root" />
	<property name="password" value="bdsk@123" />

	<!--定义相关编译变量-->
	<property name="is-debug" value="on" />
	<property name="java-version" value="1.8" />
	<property name="app-version" value="1.0" />
	<property name="webapp-version" value="1.0" />
	<property name="exclude-svn" value="**/*.svn/*.*" />
	<property name="exclude-local" value="*.propertieslocal" />
	<property name="exclude-xml" value="WEB-INF/global.xml" />

	<!--输入变量定义-->
	<property name="libs" value="${basedir}/CommonLib" />
	<property name="util" value="${basedir}/CommonUtil" />
	<property name="framework" value="${basedir}/Framework" />
	<property name="pbprotocol" value="${basedir}../../../common/trunk" />
	<property name="gamedata" value="${basedir}/GameData" />
	<property name="gameserver" value="${basedir}/GameServer" />
	<property name="centerserver" value="${basedir}/CenterServer" />
	<property name="fightserver" value="${basedir}/FightServer" />
	<property name="loginServer" value="${basedir}/LoginServer" />
	<property name="gamelogic" value="${basedir}/GameLogic" />
	<property name="niuniu" value="${basedir}/NiuNiu" />
	<property name="paodekuai" value="${basedir}/PaoDeKuai" />
	<property name="doudizhu" value="${basedir}/DouDiZhu" />
	<property name="shisanshui" value="${basedir}/ShiSanShui" />

	<!--定义最终文件输出路径-->
	<property name="lib-out" value="${basedir}/deploy/lib" />
	<property name="app-out" value="${basedir}/deploy/app" />
	<property name="web-out" value="${basedir}/deploy/web" />
	<property name="centerserver-out" value="${app-out}/centerserver" />
	<property name="gameserver-out" value="${app-out}/gameserver" />
	<property name="loginServer-out" value="${web-out}/loginserver" />
	<property name="fightserver-out" value="${app-out}/fightserver" />

	<path id="lib-path">
		<fileset dir="${libs}/library">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- 自动上传设置 -->
	<property name="ftpserverdir" value="/game" />
	<property name="gameserverdir" value="${host}:${ftpserverdir}/app/gameserver" />
	<property name="centerserverdir" value="${host}:${ftpserverdir}/app/centerserver" />
	<property name="fightserverdir" value="${host}:${ftpserverdir}/app/fightserver" />
	<property name="flashdir" value="${host}:${ftpserverdir}/web/Flash" />
	<property name="loginServer" value="${host}:${ftpserverdir}/web/loginserver" />
	<property name="webdir" value="${host}:${ftpserverdir}/web" />

	<!-- 清除已生成的旧版本文件 -->
	<target name="clean">
		<delete dir="${app-out}" />
		<delete dir="${web-out}" />
		<delete dir="${lib-out}" />
	</target>

	<!-- 创建部署文件所需路径 -->
	<target name="init" depends="clean">
		<mkdir dir="${lib-out}" />
		<mkdir dir="${app-out}" />
		<!-- CenterServer -->
		<mkdir dir="${centerserver-out}" />
		<mkdir dir="${centerserver-out}/lib" />
		<mkdir dir="${centerserver-out}/config" />

		<!-- GameServer -->
		<mkdir dir="${gameserver-out}" />
		<mkdir dir="${gameserver-out}/lib" />
		<mkdir dir="${gameserver-out}/config" />
		
		<!-- FightServer -->
		<mkdir dir="${fightserver-out}" />
		<mkdir dir="${fightserver-out}/lib" />
		<mkdir dir="${fightserver-out}/config" />

		<!-- Web -->
		<mkdir dir="${web-out}" />
		<mkdir dir="${web-out}/loginserver/WEB-INF/lib" />
	</target>

	<!-- 编译项目 -->
	<target name="compile-util" depends="init">
		<javac srcdir="${util}/src" destdir="${util}/bin" source="${java-version}" target="${java-version}" debug="${is_debug}" includeantruntime="${includeantruntime}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-framework" depends="init">
		<javac srcdir="${framework}/src" destdir="${framework}/bin" source="${java-version}" target="${java-version}" debug="${is_debug}" includeantruntime="${includeantruntime}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-pbprotocol" depends="init">
		<javac srcdir="${pbprotocol}/src" destdir="${pbprotocol}/bin" source="${java-version}" target="${java-version}" debug="${is_debug}" includeantruntime="${includeantruntime}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-gamedata" depends="init">
		<javac srcdir="${gamedata}/src" destdir="${gamedata}/bin" source="${java-version}" target="${java-version}" debug="${is_debug}" includeantruntime="${includeantruntime}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-gamelogic" depends="init">
		<javac srcdir="${gamelogic}/src" destdir="${gamelogic}/bin" source="${java-version}" target="${java-version}" debug="${is_debug}" includeantruntime="${includeantruntime}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-centerserver" depends="init">
		<javac encoding="utf-8" includeAntRuntime="false" srcdir="${centerserver}/src" destdir="${centerserver}/bin" source="${java-version}" target="${java-version}" debug="${is-debug}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-gameserver" depends="init">
		<javac encoding="utf-8" includeAntRuntime="false" srcdir="${gameserver}/src" destdir="${gameserver}/bin" source="${java-version}" target="${java-version}" debug="${is-debug}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-niuniu" depends="init">
		<javac encoding="utf-8" includeAntRuntime="false" srcdir="${niuniu}/src" destdir="${niuniu}/bin" source="${java-version}" target="${java-version}" debug="${is-debug}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-fightserver" depends="init">
		<javac encoding="utf-8" includeAntRuntime="false" srcdir="${fightserver}/src" destdir="${fightserver}/bin" source="${java-version}" target="${java-version}" debug="${is-debug}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-paodekuai" depends="init">
		<javac encoding="utf-8" includeAntRuntime="false" srcdir="${paodekuai}/src" destdir="${paodekuai}/bin" source="${java-version}" target="${java-version}" debug="${is-debug}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-doudizhu" depends="init">
		<javac encoding="utf-8" includeAntRuntime="false" srcdir="${doudizhu}/src" destdir="${doudizhu}/bin" source="${java-version}" target="${java-version}" debug="${is-debug}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-shisanshui" depends="init">
		<javac encoding="utf-8" includeAntRuntime="false" srcdir="${shisanshui}/src" destdir="${shisanshui}/bin" source="${java-version}" target="${java-version}" debug="${is-debug}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-loginServer" depends="init">
		<javac encoding="utf-8" includeAntRuntime="false" srcdir="${loginServer}/src" destdir="${loginServer}/build/classes" source="${java-version}" target="${java-version}" debug="${is-debug}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<!-- 部署框架库 -->
	<target name="deploy-util" depends="compile-util">
		<jar basedir="${util}/bin" destfile="${lib-out}/game-util-${app-version}.jar" />
	</target>
	<target name="deploy-framework" depends="compile-framework">
		<jar basedir="${framework}/bin" destfile="${lib-out}/framework-core-${app-version}.jar" />
	</target>
	<target name="deploy-pbprotocol" depends="compile-pbprotocol">
		<jar basedir="${pbprotocol}/bin" excludes="com/road/dota/proto/**" destfile="${lib-out}/game-protobuf-${app-version}.jar" />
	</target>
	<target name="deploy-gamedata" depends="compile-gamedata">
		<jar basedir="${gamedata}/bin" destfile="${lib-out}/game_gamedata_${app-version}.jar" />
	</target>
	<target name="deploy-gamelogic" depends="compile-gamelogic">
		<jar basedir="${gamelogic}/bin" destfile="${lib-out}/game_gamelogic_${app-version}.jar" />
	</target>
	<target name="deploy-niuniu" depends="compile-niuniu">
		<jar basedir="${niuniu}/bin" destfile="${lib-out}/game_niuniu_${app-version}.jar" />
	</target>
	<target name="deploy-paodekuai" depends="compile-paodekuai">
		<jar basedir="${paodekuai}/bin" destfile="${lib-out}/game_paodekuai_${app-version}.jar" />
	</target>
	<target name="deploy-doudizhu" depends="compile-doudizhu">
		<jar basedir="${doudizhu}/bin" destfile="${lib-out}/game_doudizhu_${app-version}.jar" />
	</target>
	<target name="deploy-shisanshui" depends="compile-shisanshui">
		<jar basedir="${shisanshui}/bin" destfile="${lib-out}/game_shisanshui_${app-version}.jar" />
	</target>
	<target name="deploy_base" depends="deploy-util, deploy-framework,deploy-pbprotocol, deploy-gamedata, deploy-gamelogic, deploy-niuniu,deploy-paodekuai,deploy-doudizhu,deploy-shisanshui">
	</target>
	
	<!-- 打包CenterServer -->
	<target name="deploy-centerserver" depends="compile-centerserver, deploy_base">
		<copydir src="${libs}/library" dest="${centerserver-out}/lib" excludes="${exclude-svn},${exclude-local}" />
		<copydir src="${lib-out}" dest="${centerserver-out}/lib" />
		<copydir src="${libs}/language" dest="${centerserver-out}/language" excludes="${exclude-svn}" />
		<copy file="${libs}/sh/centerserver.sh" todir="${centerserver-out}/" />
		<copy file="${libs}/config/center/global.xml" todir="${centerserver-out}/config/" />
		<!--<copy file="${libs}/sh/main.sh" todir="${centerserver-out}/" />-->
		<replace file="${centerserver-out}/config/global.xml" token="../CommonLib/" value="./" />
		<replace file="${centerserver-out}/config/global.xml" token="&lt;GMStatus&gt;true&lt;/GMStatus&gt;" value="&lt;GMStatus&gt;false&lt;/GMStatus&gt;" />
		<copy file="${libs}/config/logback.xml" todir="${centerserver-out}/config/" />
		<jar basedir="${centerserver}/bin" destfile="${centerserver-out}/niuniu_centerserver_${app-version}.jar">
			<manifest>
				<attribute name="Main-Class" value="com.game.CenterServer" />
			</manifest>
		</jar>
	</target>


	<!-- 打包GameServer -->
	<target name="deploy-gameserver" depends="compile-gameserver, deploy_base">
		<copydir src="${libs}/library" dest="${gameserver-out}/lib" excludes="${exclude-svn},${exclude-local}" />
		<copydir src="${lib-out}" dest="${gameserver-out}/lib" />
		<copydir src="${libs}/language" dest="${gameserver-out}/language" excludes="${exclude-svn}" />
		<copydir src="${libs}/resource" dest="${gameserver-out}/resource" excludes="${exclude-svn}" />
		<copy file="${libs}/sh/gameserver.sh" todir="${gameserver-out}/" />
		<copy file="${libs}/config/210/global.xml" todir="${gameserver-out}/config/" />
		<copy file="${libs}/config/edition.xml" todir="${gameserver-out}/config/" />
		<!--<copy file="${libs}/sh/main.sh" todir="${centerserver-out}/" />-->
		<replace file="${gameserver-out}/config/global.xml" token="../CommonLib/" value="./" />
		<replace file="${gameserver-out}/config/global.xml" token="&lt;GMStatus&gt;true&lt;/GMStatus&gt;" value="&lt;GMStatus&gt;false&lt;/GMStatus&gt;" />
		<copy file="${libs}/config/logback.xml" todir="${gameserver-out}/config/" />
		<replace file="${gameserver-out}/config/logback.xml" token="&lt;appender-ref ref=&quot;CONSOLE&quot;/&gt;" value="" />
		<jar basedir="${gameserver}/bin" destfile="${gameserver-out}/niuniu_gameserver_${app-version}.jar">
			<manifest>
				<attribute name="Main-Class" value="com.game.GameServer" />
			</manifest>
		</jar>
	</target>

	<!-- 打包FightServer--> 
	<target name="deploy-fightserver" depends="compile-fightserver, deploy_base">
		<copydir src="${libs}/library" dest="${fightserver-out}/lib" excludes="${exclude-svn},${exclude-local}" />
		<copydir src="${lib-out}" dest="${fightserver-out}/lib" />
		<copydir src="${libs}/language" dest="${fightserver-out}/language" excludes="${exclude-svn}" />
		<copy file="${libs}/sh/fightserver.sh" todir="${fightserver-out}/" />
		<copy file="${libs}/config/fight/global.xml" todir="${fightserver-out}/config/" />
		<replace file="${fightserver-out}/config/global.xml" token="../CommonLib/" value="./" />
		<replace file="${gameserver-out}/config/global.xml" token="&lt;GMStatus&gt;true&lt;/GMStatus&gt;" value="&lt;GMStatus&gt;false&lt;/GMStatus&gt;" />
		<copy file="${libs}/config/logback.xml" todir="${fightserver-out}/config/" />
		<jar basedir="${fightserver}/bin" destfile="${fightserver-out}/niuniu_fightserver_${app-version}.jar">
			<manifest>
				<attribute name="Main-Class" value="com.game.FightServer" />
			</manifest>
		</jar>
	</target>

	<!-- 打包loginServer -->
	<target name="deploy-loginServer" depends="compile-loginServer, deploy_base">
		<copydir src="${loginServer}/WebContent/" dest="${loginServer-out}/" excludes="${exclude-svn},${exclude-xml}" />
		<copydir src="${libs}/library" dest="${loginServer-out}/WEB-INF/lib" excludes="${exclude-svn},${exclude-local}" />
		<copydir src="${lib-out}" dest="${loginServer-out}/WEB-INF/lib" />
		<copydir src="${loginServer}/resource" dest="${loginServer-out}/WEB-INF/resource" />
		<copy file="${libs}/config/global.xml" todir="${loginServer-out}/WEB-INF/" />
		<copy file="${libs}/config/logback.xml" todir="${loginServer-out}/WEB-INF/lib" />
		<copydir src="${libs}/language" dest="${loginServer-out}/WEB-INF/language" excludes="${exclude-svn}" />
		<replace file="${loginServer-out}/WEB-INF/global.xml" token="../CommonLib/" value="/niuniu/web/loginserver/WEB-INF/" />
		<jar basedir="${loginServer}/build/classes" destfile="${loginServer-out}/WEB-INF/lib/niuniu_loginServer_${app-version}.jar" />
	</target>


	<target name="upload-server" depends="deploy-all">
		<echo>==========================start upload==========================</echo>

		<!-- 上传GameServer到 FTP 服务器-->
		<scp todir="${user}:${password}@${gameserverdir}" trust="true" verbose="true">
			<fileset dir="${gameserver-out}">
			</fileset>
		</scp>
		<!-- 上传Web到 FTP 服务器
		<scp todir="${user}:${password}@${webdir}" trust="true" verbose="true">
			<fileset dir="${web-out}">
			</fileset>
		</scp>-->

		<echo>==========================end upload=====================================</echo>
	</target>
	<target name="upload-web" depends="deploy-all">
		<scp todir="${user}:${password}@${webdir}" trust="true" verbose="true">
			<fileset dir="${web-out}">
			</fileset>
		</scp>
	</target>
	<target name="clean-temp-dir">
		<delete dir="${lib-out}" />
	</target>
	<target name="deploy-all" depends="clean, deploy-gameserver, clean-temp-dir">
	</target>
</project>