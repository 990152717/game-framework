<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE build>
<project default="upload-server" name="Niuniu-Publish-Update-yanwu" basedir="../../.">
	<description>
		niuniu自动编译打包脚本
	</description>
	<echo>Building niuniu...</echo>
	<echo>basedir: ${basedir}</echo>
	
	<!--发布变量设置-->
	<property name="host" value="47.75.182.88" />
	<property name="user" value="root" />
	<property name="password" value="qwer1234!@#$" />
	
	<!-- 自动上传设置 -->
	<property name="ftpserverdir" value="/game" />
	<property name="gameserverdir" value="${host}:${ftpserverdir}/app/gameserver" />
	<property name="centerserverdir" value="${host}:${ftpserverdir}/app/centerserver" />
	<property name="fightserverdir" value="${host}:${ftpserverdir}/app/fightserver" />
	<property name="flashdir" value="${host}:${ftpserverdir}/web/Flash" />
	<property name="loginServer" value="${host}:${ftpserverdir}/web/loginserver" />
	<property name="webdir" value="${host}:${ftpserverdir}/web" />
		
	<!--定义相关编译变量-->
	<property name="is-debug" value="on" />
	<property name="java-version" value="1.8" />
	<property name="app-version" value="1.0" />
	<property name="webapp-version" value="1.0" />
	<property name="exclude-svn" value="**/*.svn/*.*" />
	<property name="exclude-local" value="*.propertieslocal" />
	<property name="exclude-xml" value="WEB-INF/global.xml" />

	<!--输入变量定义-->
	<property name="libs" value="${basedir}/CommonLib" />
	<property name="util" value="${basedir}/CommonUtil" />
	<property name="framework" value="${basedir}/Framework" />
	<property name="pbprotocol" value="${basedir}../../../common/trunk/" />
	<property name="gamedata" value="${basedir}/GameData" />
	<property name="gameserver" value="${basedir}/GameServer" />
	<property name="gamelogic" value="${basedir}/GameLogic" />
	<property name="niuniu" value="${basedir}/NiuNiu" />

	<!--打印项目路径-->
	<echo>------Project Path----</echo>
	<echo>pbprotocol: ${pbprotocol}</echo>
	<echo>gameserver: ${gameserver}</echo>
	<echo>gamedata: ${gamedata}</echo>
	<echo>framework: ${framework}</echo>
	<echo>util: ${util}</echo>
	<echo>libs: ${libs}</echo>

	<!--定义最终文件输出路径-->
	<property name="lib-out" value="${basedir}/deploy-lite/lib" />
	<property name="app-out" value="${basedir}/deploy-lite/app" />
	<property name="gameserver-out" value="${app-out}/gameserver" />

	<path id="lib-path">
		<fileset dir="${libs}/library">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- 清除已生成的旧版本文件 -->
	<target name="clean">
		<delete dir="${app-out}" />
		<delete dir="${lib-out}" />
	</target>

	<!-- 创建部署文件所需路径 -->
	<target name="init" depends="clean">
		<mkdir dir="${lib-out}" />
		<mkdir dir="${app-out}" />

		<!-- GameServer -->
		<mkdir dir="${gameserver-out}" />
		<mkdir dir="${gameserver-out}/lib" />
	</target>

	<!-- 编译项目 -->
	<target name="compile-util" depends="init">
		<javac srcdir="${util}/src" destdir="${util}/bin" source="${java-version}" target="${java-version}" debug="${is_debug}" includeantruntime="${includeantruntime}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-framework" depends="init">
		<javac srcdir="${framework}/src" destdir="${framework}/bin" source="${java-version}" target="${java-version}" debug="${is_debug}" includeantruntime="${includeantruntime}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-pbprotocol" depends="init">
		<javac srcdir="${pbprotocol}/src" destdir="${pbprotocol}/bin" source="${java-version}" target="${java-version}" debug="${is_debug}" includeantruntime="${includeantruntime}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-gamedata" depends="init">
		<javac srcdir="${gamedata}/src" destdir="${gamedata}/bin" source="${java-version}" target="${java-version}" debug="${is_debug}" includeantruntime="${includeantruntime}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-gamelogic" depends="init">
		<javac srcdir="${gamelogic}/src" destdir="${gamelogic}/bin" source="${java-version}" target="${java-version}" debug="${is_debug}" includeantruntime="${includeantruntime}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-gameserver" depends="init">
		<javac encoding="utf-8" includeAntRuntime="false" srcdir="${gameserver}/src" destdir="${gameserver}/bin" source="${java-version}" target="${java-version}" debug="${is-debug}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<target name="compile-niuniu" depends="init">
		<javac encoding="utf-8" includeAntRuntime="false" srcdir="${niuniu}/src" destdir="${niuniu}/bin" source="${java-version}" target="${java-version}" debug="${is-debug}">
			<classpath refid="lib-path" />
		</javac>
	</target>
	<!-- 部署框架库 -->
	<target name="deploy-util" depends="compile-util">
		<jar basedir="${util}/bin" destfile="${lib-out}/game-util-${app-version}.jar" />
	</target>
	<target name="deploy-framework" depends="compile-framework">
		<jar basedir="${framework}/bin" destfile="${lib-out}/framework-core-${app-version}.jar" />
	</target>
	<target name="deploy-pbprotocol" depends="compile-pbprotocol">
		<jar basedir="${pbprotocol}/bin" excludes="com/road/dota/proto/**" destfile="${lib-out}/game-protobuf-${app-version}.jar" />
	</target>
	<target name="deploy-gamedata" depends="compile-gamedata">
		<jar basedir="${gamedata}/bin" destfile="${lib-out}/game_gamedata_${app-version}.jar" />
	</target>
	<target name="deploy-gamelogic" depends="compile-gamelogic">
		<jar basedir="${gamelogic}/bin" destfile="${lib-out}/game_gamelogic_${app-version}.jar" />
	</target>
	<target name="deploy-niuniu" depends="compile-niuniu">
		<jar basedir="${niuniu}/bin" destfile="${lib-out}/game_niuniu_${app-version}.jar" />
	</target>
	<target name="deploy_base" depends="deploy-util, deploy-framework,deploy-pbprotocol, deploy-gamedata, deploy-gamelogic, deploy-niuniu">
	</target>

	<!-- 打包GameServer -->
	<target name="deploy-gameserver" depends="compile-gameserver, deploy_base">
		<copydir src="${lib-out}" dest="${gameserver-out}/lib" />
		<jar basedir="${gameserver}/bin" destfile="${gameserver-out}/niuniu_gameserver_${app-version}.jar">
			<manifest>
				<attribute name="Main-Class" value="com.game.GameServer" />
			</manifest>
		</jar>
	</target>
	
	<target name="upload-server" depends="deploy-all">
			<echo>==========================start upload==========================</echo>

			<!-- 上传GameServer到 FTP 服务器-->
			<scp todir="${user}:${password}@${gameserverdir}" port="22" trust="true" verbose="true">
				<fileset dir="${gameserver-out}">
				</fileset>
			</scp>
			<!-- 上传Web到 FTP 服务器
			<scp todir="${user}:${password}@${webdir}" trust="true" verbose="true">
				<fileset dir="${web-out}">
				</fileset>
			</scp>-->

			<echo>==========================end upload=====================================</echo>
		</target>

	<target name="clean-temp-dir">
		<delete dir="${lib-out}" />
	</target>
	<target name="deploy-all" depends="clean,deploy-gameserver,clean-temp-dir">
	</target>

</project>